datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

generator client {
    provider = "prisma-client-js"
}

// user
model User {
    id                  String                @id @default(auto()) @map("_id") @db.ObjectId
    email               String                @unique
    username            String
    password            String
    avatar              String?
    createdAt           DateTime              @default(now())
    updatedAt           DateTime              @updatedAt
    Category            Category[]
    Transaction         Transaction[]
    DailyTransactions   DailyTransactions[]
    MonthlyTransactions MonthlyTransactions[]
    YearlyTransactions  YearlyTransactions[]
}

// custom category
model Category {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String   @unique
    category  String
    type      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @db.ObjectId
}

// transaction item
enum TransactionType {
    INCOME
    EXPENSE
    DEPOSIT
}

type ItemType {
    transactionType TransactionType
    categoryType    String
    subCategoryType String
}

model Transaction {
    id                  String             @id @default(auto()) @map("_id") @db.ObjectId
    name                String
    amount              Float
    type                ItemType
    createdAt           DateTime           @default(now())
    updatedAt           DateTime           @updatedAt
    user                User               @relation(fields: [userId], references: [id])
    userId              String             @db.ObjectId
    DailyTransactions   DailyTransactions? @relation(fields: [dailyTransactionsId], references: [id])
    dailyTransactionsId String?            @db.ObjectId
}

// daily transactions
model DailyTransactions {
    id                    String               @id @default(auto()) @map("_id") @db.ObjectId
    date                  DateTime
    total                 Float
    transactions          Transaction[]
    createdAt             DateTime             @default(now())
    updatedAt             DateTime             @updatedAt
    user                  User                 @relation(fields: [userId], references: [id])
    userId                String               @db.ObjectId
    MonthlyTransactions   MonthlyTransactions? @relation(fields: [monthlyTransactionsId], references: [id])
    monthlyTransactionsId String?              @db.ObjectId
}

// monthly transactions
type CategoryTotalType {
    transactionType TransactionType
    category        String
    total           Float
}

type SubCategoryTotalType {
    transactionType TransactionType
    subCategory     String
    total           Float
}

type TotalsType {
    income            Float
    expense           Float
    deposit           Float
    total             Float
    categoryTotals    CategoryTotalType[]
    subCategoryTotals SubCategoryTotalType[]
}

model MonthlyTransactions {
    id     String              @id @default(auto()) @map("_id") @db.ObjectId
    month  Float
    year   Float
    days   DailyTransactions[]
    total  TotalsType
    user   User                @relation(fields: [userId], references: [id])
    userId String              @db.ObjectId
}

// yearly transactions
model YearlyTransactions {
    id     String     @id @default(auto()) @map("_id") @db.ObjectId
    year   Float
    total  TotalsType
    user   User       @relation(fields: [userId], references: [id])
    userId String     @db.ObjectId
}
